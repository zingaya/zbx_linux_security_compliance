1.9
Major changes:
- YAML-based playbook fully dynamic generation directly from Python using PyYAML, removing tasks that are not enterely needed (e.g., only APT manager is used) and allowing to easily add/replace tasks. As a result, the ``linux_security_compliance.yaml`` file has been removed.
- Reworked command-line arguments to provide more intuitive and flexible options. Can now override configuration values via command-line arguments (e.g., Zabbix server, inventory file, package manager type, etc.).
- Introduced more flexibility for choosing the package manager and for selecting which packages to lock/unlock (at the same time).
- Better error handling and debug info.

Changes:
- Renamed ZABBIX_DEF_HOSTNAME to ZABBIX_HOST.
- Added a check to prevent running the script more than once by verifying the existence of, this script, temporary files.
- Added debug flag to check YAML, data sent to Zabbix and other variables values.
- Now removes all temporary files when the script completes successfully.
- Added more distros by default to each package manager.

1.1
Changes:
- Added new params to lock/hold and unlock/unhold packages.
  - Yum already filters those that are locked, but changed the apt when listing updates to remove those holded.
  - The list of apt packages are without the repository (ex: "packagename/repository 1.1.1 amd64").
  - Removed the javascript function in the zabbix preprocessor to remove the repository, and added to diplay the error when trying to list updates into the 'updates.pending.list' item.
- Improved errors handling Ansible/Python.
- Added an option to escalate privileges using Ansible (become).
- Case insensitive for param --sshcheck (True/true - False/false)

Notes: 
- When locking/unlocking a package fails, it would not proceed to update/upgrade. As a failsafe in case you do not want to upgrade a package.
- For Ansible yum-versionlock module, now requires to install the collection. Added it into README.

1.0
First release:
- Update repositories and the ability to do upgrade of packages.